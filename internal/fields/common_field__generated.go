// Code generated by tools. DO NOT EDIT!
package fields

import (
	"github.com/shrewx/ginx/pkg/i18nx"
	"github.com/nicksnyder/go-i18n/v2/i18n"
)

func init() {
	i18nx.RegisterHooks(RegisterI18nMessages)
}

func (v CommonField) Localize(manager *i18nx.Localize, lang string) i18nx.I18nMessage {
	return i18nx.NewMessage(v.Key(), v.Prefix()).Localize(manager, lang)
}

func (v CommonField) Key() string {
	return string(v)
}

func (v CommonField) Prefix() string {
	return "errors.references"
}

func (v CommonField) ID() string {
	if v.Prefix() == "" {
		return v.Key()
	}
	return v.Prefix() + "." + v.Key()
}

func (v CommonField) Value() string {
	return i18nx.NewMessage(v.Key(), v.Prefix()).Value()
}

func (v CommonField) Message(lang string) string {
	return v.Localize(i18nx.Instance(), lang).Value()
}

func GetCommonFieldENMessages() []*i18n.Message {
	var messages []*i18n.Message

	messages = append(messages, &i18n.Message{ID: ErrorIndex.ID(), Other: "index"})
	messages = append(messages, &i18n.Message{ID: ErrorLine.ID(), Other: "line"})
	return messages
}

func GetCommonFieldZHMessages() []*i18n.Message {
	var messages []*i18n.Message

	messages = append(messages, &i18n.Message{ID: ErrorIndex.ID(), Other: "索引"})
	messages = append(messages, &i18n.Message{ID: ErrorLine.ID(), Other: "行"})
	return messages
}

func RegisterI18nMessages() { 
	i18nx.AddMessages("en", GetCommonFieldENMessages()) 
	i18nx.AddMessages("zh", GetCommonFieldZHMessages())  
}
