// Code generated by tools. DO NOT EDIT!
package messages

import (
	"github.com/shrewx/ginx/pkg/i18nx"
	"github.com/nicksnyder/go-i18n/v2/i18n"
)

func init() {
	i18nx.RegisterHooks(RegisterI18nMessages)
}

func (v CommonMessage) Localize(manager *i18nx.Localize, lang string) i18nx.I18nMessage {
	return i18nx.NewMessage(v.Key(), v.Code()).Localize(manager, lang)
}

func (v CommonMessage) Key() string {
	switch v { 
	case ErrorLine:
		return "ErrorLine"
	}
	return "UNKNOWN"
}

func (v CommonMessage) Code() int64 {
	return int64(v)
}

func (v CommonMessage) Value() string {
	return i18nx.NewMessage(v.Key(), v.Code()).Value()
}

func (v CommonMessage) Message(lang string) string {
	return v.Localize(i18nx.Instance(), lang).Value()
}

func GetCommonMessageENMessages() []*i18n.Message {
	var messages []*i18n.Message

	messages = append(messages, &i18n.Message{ID: ErrorLine.Key(), Other: "line"})
	return messages
}

func GetCommonMessageZHMessages() []*i18n.Message {
	var messages []*i18n.Message

	messages = append(messages, &i18n.Message{ID: ErrorLine.Key(), Other: "è¡Œ"})
	return messages
}

func RegisterI18nMessages() { 
	i18nx.AddMessages("en", GetCommonMessageENMessages()) 
	i18nx.AddMessages("zh", GetCommonMessageZHMessages())  
}
