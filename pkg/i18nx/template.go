package i18nx

const I18nTemplate = `// Code generated by tools. DO NOT EDIT!
package {{ .Package }}

import (
	"github.com/shrewx/ginx/pkg/i18nx"
	"github.com/nicksnyder/go-i18n/v2/i18n"
)

func init() {
	i18nx.RegisterHooks(RegisterI18nMessages)
}

func (v {{ .ClassName }}) Localize(manager *i18nx.Localize, lang string) i18nx.I18nMessage {
	return i18nx.NewMessage(v.Key(), v.Code()).Localize(manager, lang)
}

func (v {{ .ClassName }}) Key() string {
	switch v { {{range .Keys}}
	case {{ .Key}}:
		return "{{ .Key}}"{{end}}
	}
	return "UNKNOWN"
}

func (v {{ .ClassName }}) Code() int64 {
	return int64(v)
}

func (v {{ .ClassName }}) Value() string {
	return i18nx.NewMessage(v.Key(), v.Code()).Value()
}

func (v {{ .ClassName }}) Message(lang string) string {
	return v.Localize(i18nx.Instance(), lang).Value()
}

{{range $lang, $error := .Messages}}func Get{{ $.ClassName }}{{upper $lang}}Messages() []*i18n.Message {
	var messages []*i18n.Message
{{range $error}}
	messages = append(messages, &i18n.Message{ID: {{.Key}}.Key(), Other: "{{.Message}}"}){{end}}
	return messages
}

{{end}}func RegisterI18nMessages() { {{range $lang, $error := .Messages}}
	i18nx.AddMessages("{{$lang}}", Get{{ $.ClassName }}{{upper $lang}}Messages()) {{end}} 
}
`
